<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woody.dao.UserDao">
    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.woody.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!-- 非主键字段的对应 -->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <!-- 了解的内容，抽取重复的sql语句 -->
    <sql id="defaultUser">
        select * from user
    </sql>

    <!-- 查询所有 -->
    <select id="findAll" resultMap="userMap">
        <include refid="defaultUser" />
    </select>

    <!-- 根据ID查询用户 -->
    <select id="findById" resultMap="userMap" parameterType="Integer">
        select * from user where id=#{uid}
    </select>

    <!-- 根据名称模糊查询 -->
    <select id="findByName" parameterType="String" resultMap="userMap">
        <!-- select * from user where username like '%${value}%'; -->
        select * from user where username like '${name}';
    </select>

    <!-- 根据QueryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.woody.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.userName}
    </select>

    <!-- 根据条件查询
    <select id="findUserByCondition" parameterType="user"  resultMap="userMap">
        select * from user where 1=1
        <if test="userName != null">
            and username = #{userName}
        </if>
        <if test="userSex != null">
            and sex = #{userSex}
        </if>
    </select>
    -->

    <!-- 根据条件查询 -->
    <select id="findUserByCondition" parameterType="user"  resultMap="userMap">
        <include refid="defaultUser"></include>
        <where>
        <if test="userName != null">
            and username = #{userName}
        </if>
        <if test="userSex != null">
            and sex = #{userSex}
        </if>
        </where>
    </select>

    <!-- 根据id集合查询用户信息 -->
    <select id="findUserInIds" parameterType="QueryVo"  resultMap="userMap">
        <include refid="defaultUser"></include>
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in(" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

</mapper>