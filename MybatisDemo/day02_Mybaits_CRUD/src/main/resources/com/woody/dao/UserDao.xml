<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woody.dao.UserDao">
    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.woody.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!-- 非主键字段的对应 -->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <!-- 查询所有 -->
    <select id="findAll" resultMap="userMap">
        select * from user;
    </select>

    <!-- 保存用户 -->
    <!-- parameterType表示的是参数的类型 -->
    <insert id="saveUser" parameterType="user">
        <!-- 配置插入操作后，获取插入数据的ID
            keyProperty表示实体类字段名字，keyColumn表示数据库的字段名，after表示插入后
        -->
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username, birthday, sex, address) values(#{userName}, #{userBirthday},
            #{userSex}, #{userAddress});
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.woody.domain.User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{uid};
    </delete>

    <!-- 根据ID查询用户 -->
    <select id="findById" resultMap="userMap" parameterType="Integer">
        select * from user where id=#{uid}
--         上面的uid随便什么名字都可以，因为只有一个占位符
    </select>

    <!-- 根据名称模糊查询 -->
    <select id="findByName" parameterType="String" resultMap="userMap">
        <!-- select * from user where username like '%${value}%'; -->
        select * from user where username like '${name}';
    </select>

    <!-- 获取用户的总记录数 -->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>

    <!-- 根据QueryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.woody.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.userName}
    </select>
</mapper>