<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置Spring的IOC，把Service对象配置进来 -->
    <bean id="accountService" class="com.woody.service.impl.AccountServiceImpl"></bean>

    <!-- 配置Logger类 -->
    <bean id="logger" class="com.woody.utils.Logger"></bean>

    <!-- 配置AOP -->
    <aop:config>
        <!-- 配置切入点表达式 id：用于指定表达式的唯一标志,expression：用于指定表达式内容
                 此标签只能写在aop:aspect标签内部，只能在当前切面使用。
                 它还可以写在aop:aspect外部，此时就变成了所有切面可用，注意只能在aop:aspect之前，否则报错xml document...
                 它是按照最上面的那段约束的，所以以后报错后要考虑xml中顺序问题
            -->
        <aop:pointcut id="ptl" expression="execution(* com.woody.service.impl.*.*(..))"/>
        <!-- 配置切面 -->
        <aop:aspect id="logAdvice" ref="logger">
            <!-- 配置前置通知的类型，在切入点方法执行之前执行
            <aop:before method="beforePrintLog" pointcut-ref="ptl"></aop:before>
            -->

            <!-- 配置后置通知的类型，在切入点方法正常执行之后执行，与异常通知只能执行一个，动态代理部分讲过，事务要么回滚要么正常执行
            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="ptl"></aop:after-returning>
            -->

            <!-- 配置异常通知的类型，在切入点方法执行产生异常之后执行，与后置通知只能执行一个
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="ptl"></aop:after-throwing>
            -->

            <!-- 配置最终通知的类型，无论切入点方法执行正常与否都会在其后面执行
            <aop:after method="afterPrintLog" pointcut-ref="ptl"></aop:after>
            -->

            <!-- 配置环绕通知  详细的注释请看Logger类中-->
            <aop:around method="aroundPrintLog" pointcut-ref="ptl"></aop:around>
            
        </aop:aspect>
    </aop:config>

</beans>